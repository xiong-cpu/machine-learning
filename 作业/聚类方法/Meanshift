Mean shift聚类算法学习报告

主要思路：
计算某一点A与其周围半径R内的向量距离的平均值M，计算出该点下一步漂移（移动）的方向（A=M+A）。
当该点不再移动时，其与周围点形成一个类簇，计算这个类簇与历史类簇的距离，满足小于阈值D即合并
为同一个类簇，不满足则自身形成一个类簇。直到所有的数据点选取完毕。

算法特点：
由于在实际中，我们不可能去求取下一帧中所有位置的相似度。Mean Shift是在不知道该概率密度分布
的条件下，使用迭代过程中每次选定的目标区域的局部密度特征来进行迭代的，因此，它寻找的是目标
的局部极大值。这就导致目标运动过快或背景过于复杂时，迭代寻找的局部极值并不是目标在下一帧中
的最佳匹配位置。另外，Mean Shift作为最速下降法的一种，它的收敛速度并不快，且在接近最优值时，
存在锯齿现象。

算法基本步骤：
1、Mean Shift向量
在d维空间中，任选一个点，然后以这个点为圆心，h为半径做一个高维球，因为有d维，d可能大于2，所
以是高维球。落在这个球内的所有点和圆心都会产生一个向量，向量是以圆心为起点落在球内的点位终点。
然后把这些向量都相加。相加的结果就是Mean Shift向量。
2、再以meanshift向量的终点为圆心，再做一个高维的球。如下图所以，重复以上步骤，就可得到一个
Mean Shift向量。如此重复下去，Mean Shift算法可以收敛到概率密度最大得地方。也就是最稠密的地方。

与KMean算法比较
与KMeans相比较而言，meashift可以不用指定类簇的个数，自动发现类簇结构。
但是Kmeans也类似，发现的类簇多为球状类簇，不能发现一些混合度较高，非球状类簇。

